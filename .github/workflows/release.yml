name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml

  build-and-push:
    runs-on: ubuntu-latest
    needs: test-and-coverage
    permissions:
      packages: write
      contents: read
    env:
      OWNER: ${{ github.repository_owner }}
      TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.OWNER }}/aegis-deid-api
            ghcr.io/${{ env.OWNER }}/aegis-deid-worker
          tags: |
            type=raw,value=${{ env.TAG }}
            type=raw,value=latest

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.api
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/aegis-deid-api:${{ env.TAG }}
            ghcr.io/${{ env.OWNER }}/aegis-deid-api:latest
          build-args: |
            VERSION=${{ env.TAG }}
            GIT_SHA=${{ github.sha }}
          labels: |
            org.opencontainers.image.title=Aegis DeID API
            org.opencontainers.image.version=${{ env.TAG }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Build and push Worker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.worker
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/aegis-deid-worker:${{ env.TAG }}
            ghcr.io/${{ env.OWNER }}/aegis-deid-worker:latest
          build-args: |
            VERSION=${{ env.TAG }}
            GIT_SHA=${{ github.sha }}
          labels: |
            org.opencontainers.image.title=Aegis DeID Worker
            org.opencontainers.image.version=${{ env.TAG }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Upload README artifact
        uses: actions/upload-artifact@v4
        with:
          name: readme
          path: README.md

      - name: Upload CHANGELOG artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: CHANGELOG.md
          if-no-files-found: ignore

  release:
    runs-on: ubuntu-latest
    needs: [test-and-coverage, build-and-push]
    permissions:
      contents: write
    steps:
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            dist/coverage.xml
            README.md
            CHANGELOG.md

